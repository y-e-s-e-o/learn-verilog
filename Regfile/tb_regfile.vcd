$date
	Tue Mar  4 23:24:37 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module tb_regfile $end
$var wire 32 ! rs2_data [31:0] $end
$var wire 32 " rs1_data [31:0] $end
$var reg 1 # clk $end
$var reg 2 $ rd [1:0] $end
$var reg 32 % rd_data [31:0] $end
$var reg 2 & rs1 [1:0] $end
$var reg 2 ' rs2 [1:0] $end
$var reg 1 ( we $end
$scope module u_regfile $end
$var wire 1 # clk $end
$var wire 2 ) rd [1:0] $end
$var wire 32 * rd_data [31:0] $end
$var wire 2 + rs1 [1:0] $end
$var wire 2 , rs2 [1:0] $end
$var wire 1 ( we $end
$var reg 32 - rs1_data [31:0] $end
$var reg 32 . rs2_data [31:0] $end
$var reg 32 / x1 [31:0] $end
$var reg 32 0 x2 [31:0] $end
$var reg 32 1 x3 [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
x(
bx '
bx &
bx %
bx $
0#
bx "
bx !
$end
#5
b1 /
b1 %
b1 *
b1 $
b1 )
1(
1#
#10
b0 !
b0 .
b1 "
b1 -
b0 '
b0 ,
b1 &
b1 +
0(
0#
#15
b10 0
b10 %
b10 *
b10 $
b10 )
1(
1#
#20
b10 !
b10 .
b0 "
b0 -
b10 '
b10 ,
b0 &
b0 +
0(
0#
#25
1#
